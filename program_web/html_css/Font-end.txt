========== String ==========
keyword : javaScrip string methods
length : Độ dài chuỗi
indexOf : tìm vị trí kí tự trong chuỗi
lastIndexOf : tìm vị trí kí tự trong chuỗi ngược
search : tìm kiếm theo biểu thức chính quy
slice : cut chuỗi
replace : thay thế
/string/g : biểu thức chính quy
toUpperCase : viết hoa
toLowerCase : viết thường
trim : cắt space dư 2 đầu
split : chuyển chuỗi sang array
charAt : lấy kí tự trong chuỗi

========== Number ==========
keyword : javaScrip number methods
Number.isFinite() : Xác định xem giá trị đã cho có phải là số hữu hạn hay không. Trả về boolean
Number.isInteger() : Xác định xem giá trị đã cho có phải là số nguyên hay không. Trả về boolean
Number.parseFloat() : Chuyển đổi chuỗi đã cho thành một số dấu phẩy động
Number.parseInt() : Chuyển đổi chuỗi đã cho thành một số nguyên
Number.prototype.toFixed() : Chuyển đổi và trả về chuỗi đại diện cho số đã cho, có số chữ số chính xác sau dấu thập phân
Number.prototype.toString() : Chuyển đổi và trả về số đã cho dưới dạng chuỗi
isNaN : kiểm tra giá trị là NaN
toString : chuyển number sáng string
toFixed : lấy số thập phân

========== Array ==========
keyword : javaScrip array methods
isArray : kiểm tra có phải là array
length : kiểm tra độ dài mảng
toString : chuyển kiểu dữ liệu array sang string
join : chuyển kiểu dữ liệu array sang string có thay đổi space
pop : xoá phần tử cuối mảng và trả về phần tử đã xoá
push : thêm phần tử cuối mảng
shift : xoá phần tử đầu mảng và trả về phần tử đã xoá
unshift : thêm phần tử đầu mảng
splice : xoá và chèn phần tử theo index
concat : nối mảng
slice : cắt mảng

========== Array 2 ==========
forEach() : duyệt qua phần tử của mảng
every() : kiểm tra tất cả phần tử mảng phải thoả đều kiện (return boolean)
some() : kiểm tra tất cả phần tử mảng chỉ cần 1 phần tử thoả đều kiện (return boolean)
find() : tìm kiếm 1 phần tử
filter() : tìm kiếm tất cả phần tử
map() : thay đổi element của 1 array

========== Object ==========
keyword : javaScrip array methods
keyword : javaScrip date object mozilla
delete : xoá phần tử 
prototype : phần tử vào constructor

===== math object=====
Math.PI : trả lại số pi
Math.round() : làm tròn số
Math.abs() : giá trị tuyệt đối
Math.ceil() : làm tròn trên
Math.floor() : làm tròn dưới
Math.random() : trả về số thập phân nhỏ hơn 1
Math.min() : số nhỏ nhất
Math.max() : số lớn nhất

========== Loop ==========
For/in : lặp qua key (array, object, string)
For/of : lặp qua value (array, string)

========== DOM ==========

===== Get element methods =====
ID : getElementById
class : getElementsByClassName
tag : getElementsByTagName
CSS selector : querySelector,querySelectorAll
HTML collection : ....
:first-child : lấy phần tử đầu
:nth-child(index) : lấy phần tử tuỳ ý

===== DOM Attribute =====
id,className,href
setAttribute() : thêm attribute
getAttribute() : lấy ra attribute

===== DOM Text =====
innerText : get và set text
textContent : get và set text lấy nguyên block
innerHTML : lấy ra con
outerHTML : lấy ra chính nó và con

===== DOM Node properties =====
className : lấy ra class
id : lấy ra attribute id
innerHTML
innerText
textContent
clientHeight : kích thước chiều cao
clientWidth : kích thước chiều dài
clientLeft : trục x toạ độ
clientTop : trục y toạ độ
contenteditable : chỉnh sửa nội dung như thẻ input
autofocus : kích hoạt con trỏ chuột nháy trong ô input
autocapitalize : tự động viết hoa
baseURI : trả về url hiện tại
childElementCount : điếm phần tử con là elementNode
childNodes : điếm cả text và element
children : trả về phần tử con là elementNode
classList : quản lý attribute class của 1 element
draggable : liên quan đến kéo thả
firstChild : lấy ra node đầu tiên
firstElementChild : lấy ra element đầu tiên
lastChild : lấy ra node cuối cùng
lastElementChild : lấy ra element cuối cùng
hidden : ẩn hiện
localName : element hiện tại
nextSibling : trả về node tiếp theo
nextElementSibling : trả về element tiếp theo
nodeType : 1-elementNode / 2-attributeNode / 3-textNode
offsetParent : thẻ cha
ownerDocument : element đang nằm trong tài liệu sở hữu nào

===== DOM CSS =====
Object.assign(element.style,{}) : hợp nhất các style

===== ClassList property =====
element.classList.
length : kiểm tra độ dài
value : trả về chuỗi
add : thêm class vào element
contains : kiểm tra 1 class có nằm trong element trả về true false
remove : xoá 1 class khỏi element
toggle : có thì thêm không có thì xoá

===== DOM EVENT =====
1.Attribute events : sử dụng trực tiếp
2.Assign event using the element node : gán
e.target.value : lấy giá trị thẻ input text,select>option
e.target.checked : lấy giá trị true false thẻ input checkbox
e.which : lấy ra mã phím

click : xảy ra khi bấm vào
change : thay đổi nội dung thẻ input user ,...
input : thay đổi nội dung thẻ input user ,... ngay khi gõ
coppy : khi thực hiện hành động coppy
cut : cắt trên website
dblclick : double click
drag : liên quan đến kéo thả
focus : khi tập trung con trỏ chuột vào thẻ buttom hoặc thẻ input nào đó
keydown : khi bấm phím trên bàn phím xuống
keyup : khi nhất phím trên bàn phím lên
keypress : giữ phím
mouseover : như hover khi đưa chuột vào
mouseout : như hover khi đưa chuột ra
mouseup : như hover khi click chuột
resize : khi thây đổi kích thước trình duyệt hoặc kích thước element
scroll : khi lăn chuột
